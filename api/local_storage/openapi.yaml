openapi: 3.0.3

info:
  title: CasaOS Local Storage API
  version: v2
  description: |-
    <picture>
        <source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/IceWhaleTech/logo/main/casaos/casaos_banner_dark_night_800px.png">
        <source media="(prefers-color-scheme: light)" srcset="https://raw.githubusercontent.com/IceWhaleTech/logo/main/casaos/casaos_banner_twilight_blue_800px.png">
        <img alt="CasaOS" src="https://raw.githubusercontent.com/IceWhaleTech/logo/main/casaos/casaos_banner_twilight_blue_800px.png">
    </picture>

    CasaOS Local Storage service manages local storage including disks, partitions and mounting points.
    
    This API allows interacting with the service to conduct such management.

    For issues and discussions, please visit the [GitHub repository](https://github.com/IceWhaleTech/CasaOS) or join [our Discord](https://discord.gg/knqAbbBbeX).

servers:
  - url: /v2/local_storage

tags:
  - name: Mount methods

  - name: Mount
    description: |-
      <SchemaDefinition schemaRef="#/components/schemas/Mount" />

x-tagGroups:
  - name: Mount
    tags:
      - Mount methods

  - name: Schemas
    tags:
      - Mount

paths:
  /mount:
    get:
      summary: Get all mounted volumes
      description: |-
        Get all volumes currently mounted on the system. Volumes can be filtered by corresponding query parameters.
      operationId: getMounts
      tags:
        - Mount methods
      parameters:
        - name: id
          in: query
          description: |-
            Filter the results by id
          schema:
            type: string
            example: "0"
        - name: mount_point
          in: query
          description: |-
            Filter the results by mount point
          schema:
            type: string
            example: "/"
        - name: type
          in: query
          description: |-
            Filter the results by type
          schema:
            type: string
            example: "ext4"
        - name: source
          in: query
          description: |-
            Filter the results by source
          schema:
            type: string
            example: "/dev/sda1"
      responses:
        '200':
          $ref: '#/components/responses/GetMountsResponseOK'

    post:
      summary: Mount a volume
      description: |-
        (TODO)
      operationId: mount
      tags:
        - Mount methods
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mount'
      responses:
        '200':
          $ref: '#/components/responses/AddMountResponseOK'
        '400':
          $ref: '#/components/responses/ResponseBadRequest'
        '403':
          $ref: '#/components/responses/ResponseForbidden'
        '409':
          $ref: '#/components/responses/ResponseConflict'

    put:
      summary: Update a mount volume
      description: |-
        Updating a mount volume is equivalent to unmounting the volume and mounting it again with the new parameters.
      operationId: updateMount
      tags:
        - Mount methods
      parameters:
        - name: id
          in: query
          description: |-
            Filter the results by id
          schema:
            type: string
            example: "0"
        - name: mount_point
          in: query
          description: |-
            Filter the results by mount point
          schema:
            type: string
            example: "/"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mount'
      responses:
        '200':
          $ref: '#/components/responses/UpdateMountResponseOK'
        '400':
          $ref: '#/components/responses/ResponseBadRequest'
        '403':
          $ref: '#/components/responses/ResponseForbidden'
        '404':
          $ref: '#/components/responses/ResponseNotFound'
        '409':
          $ref: '#/components/responses/ResponseConflict'

    delete:
      summary: Umount volume
      description: |-
        (TODO)
      operationId: Umount
      tags:
        - Mount methods
      parameters:
        - name: mount_point
          in: query
          required: true
          description: |-
            Filter the results by mount point
          schema:
            type: string
            example: "/DATA"
      responses:
        '200':
          $ref: '#/components/responses/UmountResponseOK'
        '400':
          $ref: '#/components/responses/ResponseBadRequest'
        '403':
          $ref: '#/components/responses/ResponseForbidden'
        '404':
          $ref: '#/components/responses/ResponseNotFound'
        '409':
          $ref: '#/components/responses/ResponseConflict'

components:

  responses:

    GetMountsResponseOK:
      description: OK
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/BaseResponse'
              - type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Mount'

    AddMountResponseOK:
      description: OK
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/BaseResponse'
              - type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Mount'

    UpdateMountResponseOK:
      description: OK
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/BaseResponse'
              - type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Mount'

    UmountResponseOK:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BaseResponse'

    ResponseBadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/BaseResponse'
          example:
            message: "Bad Request"

    ResponseNotFound:
      description: Not Found
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/BaseResponse'
          example:
            message: "Not Found"

    ResponseForbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/BaseResponse'
          example:
            message: "Forbidden"

    ResponseConflict:
      description: Conflict
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/BaseResponse'
          example:
            message: "Conflict"

  schemas:

    BaseResponse:
      properties:
        message:
          readOnly: true
          description: message returned by server side if there is any
          type: string
          example: ""

    Mount:
      type: object
      minProperties: 1
      properties:
        Id:
          type: integer
          readOnly: true
        MountPoint:
          type: string
          example: "/DATA"
        FSType:
          type: string
          example: "fuse.mergerfs"
        Source:
          type: string
          example: "/mnt/a:/mnt/b"
        Options:
          type: string
          example: "defaults,allow_other,use_ino,category.create=mfs,moveonenospc=true,minfreespace=1M"
        Persist:
          type: boolean
          description: |-
            `true` if the mount should be persisted in `/etc/fstab`, `false` otherwise
          default: false
        Extended:
          type: object
          description: |-
            Extended properties of the mount
          additionalProperties:
            type: string
          example:
            "mergerfs.srcmounts": "/mnt/a:/mnt/b"
